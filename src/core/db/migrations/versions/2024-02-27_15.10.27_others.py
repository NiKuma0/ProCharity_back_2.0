"""Others

Revision ID: 08c51fddecef
Revises: fe9ed9252c2b
Create Date: 2024-02-27 15:10:27.092602

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "08c51fddecef"
down_revision = "fe9ed9252c2b"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "admin_token_requests",
        "token_expiration_date",
        existing_type=sa.DATE(),
        type_=sa.DateTime(),
        existing_nullable=False,
    )
    op.drop_constraint("registers_email_key", "admin_token_requests", type_="unique")
    op.alter_column(
        "categories", "name", existing_type=sa.VARCHAR(length=100), type_=sa.String(length=256), existing_nullable=False
    )
    op.alter_column(
        "external_site_users",
        "email",
        existing_type=sa.VARCHAR(length=48),
        type_=sa.String(length=256),
        existing_nullable=True,
    )
    op.alter_column(
        "external_site_users",
        "first_name",
        existing_type=sa.VARCHAR(length=64),
        type_=sa.String(length=256),
        existing_nullable=True,
    )
    op.alter_column(
        "external_site_users",
        "last_name",
        existing_type=sa.VARCHAR(length=64),
        type_=sa.String(length=256),
        existing_nullable=True,
    )
    op.create_index(op.f("ix_external_site_users_external_id"), "external_site_users", ["external_id"], unique=False)
    op.add_column("tasks", sa.Column("legal_address", sa.String(), nullable=True))
    op.add_column("tasks", sa.Column("fund_city", sa.String(), nullable=True))
    op.add_column("tasks", sa.Column("fund_rating", sa.Float(), nullable=True))
    op.add_column("tasks", sa.Column("fund_site", sa.String(), nullable=True))
    op.add_column("tasks", sa.Column("yb_link", sa.String(), nullable=True))
    op.add_column("tasks", sa.Column("vk_link", sa.String(), nullable=True))
    op.add_column("tasks", sa.Column("fund_sections", sa.String(), nullable=True))
    op.alter_column("unsubscribe_reason", "user_id", existing_type=sa.INTEGER(), nullable=False)
    op.alter_column(
        "users", "username", existing_type=sa.VARCHAR(length=32), type_=sa.String(length=256), existing_nullable=True
    )
    op.alter_column(
        "users", "email", existing_type=sa.VARCHAR(length=48), type_=sa.String(length=256), existing_nullable=True
    )
    op.alter_column(
        "users", "first_name", existing_type=sa.VARCHAR(length=64), type_=sa.String(length=256), existing_nullable=True
    )
    op.alter_column(
        "users", "last_name", existing_type=sa.VARCHAR(length=64), type_=sa.String(length=256), existing_nullable=True
    )
    op.drop_constraint("users_email_key", "users", type_="unique")
    op.drop_constraint("users_external_id_key", "users", type_="unique")
    op.drop_constraint("users_telegram_id_key", "users", type_="unique")
    op.create_index(op.f("ix_users_telegram_id"), "users", ["telegram_id"], unique=True)
    op.drop_column("users", "dump_id")
    op.alter_column("users_categories", "user_id", existing_type=sa.INTEGER(), nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("users_categories", "user_id", existing_type=sa.INTEGER(), nullable=True)
    op.add_column("users", sa.Column("dump_id", sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_index(op.f("ix_users_telegram_id"), table_name="users")
    op.create_unique_constraint("users_telegram_id_key", "users", ["telegram_id"])
    op.create_unique_constraint("users_external_id_key", "users", ["dump_id"])
    op.create_unique_constraint("users_email_key", "users", ["email"])
    op.alter_column(
        "users", "last_name", existing_type=sa.String(length=256), type_=sa.VARCHAR(length=64), existing_nullable=True
    )
    op.alter_column(
        "users", "first_name", existing_type=sa.String(length=256), type_=sa.VARCHAR(length=64), existing_nullable=True
    )
    op.alter_column(
        "users", "email", existing_type=sa.String(length=256), type_=sa.VARCHAR(length=48), existing_nullable=True
    )
    op.alter_column(
        "users", "username", existing_type=sa.String(length=256), type_=sa.VARCHAR(length=32), existing_nullable=True
    )
    op.alter_column("unsubscribe_reason", "user_id", existing_type=sa.INTEGER(), nullable=True)
    op.drop_column("tasks", "fund_sections")
    op.drop_column("tasks", "vk_link")
    op.drop_column("tasks", "yb_link")
    op.drop_column("tasks", "fund_site")
    op.drop_column("tasks", "fund_rating")
    op.drop_column("tasks", "fund_city")
    op.drop_column("tasks", "legal_address")
    # op.drop_constraint(None, "external_site_users", type_="unique")
    op.drop_index(op.f("ix_external_site_users_external_id"), table_name="external_site_users")
    op.alter_column(
        "external_site_users",
        "last_name",
        existing_type=sa.String(length=256),
        type_=sa.VARCHAR(length=64),
        existing_nullable=True,
    )
    op.alter_column(
        "external_site_users",
        "first_name",
        existing_type=sa.String(length=256),
        type_=sa.VARCHAR(length=64),
        existing_nullable=True,
    )
    op.alter_column(
        "external_site_users",
        "email",
        existing_type=sa.String(length=256),
        type_=sa.VARCHAR(length=48),
        existing_nullable=True,
    )
    op.alter_column(
        "categories", "name", existing_type=sa.String(length=256), type_=sa.VARCHAR(length=100), existing_nullable=False
    )
    op.create_unique_constraint("registers_email_key", "admin_token_requests", ["email"])
    op.alter_column(
        "admin_token_requests",
        "token_expiration_date",
        existing_type=sa.DateTime(),
        type_=sa.DATE(),
        existing_nullable=False,
    )
    # ### end Alembic commands ###
